<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:firefly="http://www.firefly-rpc.org/firefly"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.firefly-rpc.org/firefly
       http://www.firefly-rpc.org/firefly/firefly.xsd">

    <bean id="providerAcceptor" class="org.firefly.transport.netty.acceptor.ProviderServerNettyTcpAcceptor" />

    <firefly:server id="fireflyServer" registryType="default" acceptor="providerAcceptor">
        <firefly:property registryServerAddresses="127.0.0.1:20001" />
        <!-- 可选配置 -->
        <!--
            String registryServerAddresses                      // 注册中心地址 [host1:port1,host2:port2....]
            ProviderInterceptor[] providerInterceptors          // 全局拦截器
            FlowController<JRequest> flowController             // 全局流量控制
        -->
    </firefly:server>

    <!-- provider -->
    <bean id="serviceTest" class="org.firefly.example.providerservice.ServiceTestImpl" />

    <firefly:provider id="serviceTestProvider" server="fireflyServer" providerImpl="serviceTest">
        <firefly:property weight="100"/>
        <!-- 可选配置 -->
        <!--
            ProviderInterceptor[] providerInterceptors          // 私有拦截器
            int weight                                          // 权重
            Executor executor                                   // 该服务私有的线程池
            FlowController<JRequest> flowController             // 该服务私有的流量控制器
            JServer.ProviderInitializer<?> providerInitializer  // 服务延迟初始化
            Executor providerInitializerExecutor                // 服务私有的延迟初始化线程池, 如果未指定则使用全局线程池
        -->
    </firefly:provider>
</beans>